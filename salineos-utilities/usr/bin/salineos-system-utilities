#!/bin/bash
# Licensed under the GNU General Public License Version 2
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
####################################################################################################
# Copyright 2011,2012 Anthony Nordquist http://www.salineos.com salinelinux@gmail.com 


Restricted () {

yad --wrap --height=300 --width=500 --center --button=$"Read Adobe EULA:3" --button=$"Decline:5" --button=$"Agree and Install:7" --title=SalineOS-Installer --window-icon=/usr/share/pixmaps/salineos-installer.png --text="Support for a variety of media formats are possibly under patent protection in some jurisdictions. Therefore, support for decoding some media files is not included on this disk.  Plug-ins are available from a third party to decode a wide range of media formats, but use of these plug-ins without a license could possibly violate government sanctioned intellectual property rights (Patent rights, not to be confused with copyright). In order to install these plug-ins you must agree to:\n\nA. Accept responsibility for knowing the laws in your country.\n\nB. Never use the software to illegally copy a DVD disk.\n\nC. Accept the terms of Adobe's End User License Agreement.\n\n"

ret="$?"

if [ "$ret" = "252" ]; then
 MainMenu
 exit 0
elif [ "$ret" = "5" ]; then
 MainMenu
 exit 0
elif [ "$ret" = "3" ]; then
 yad --list --column='   ' --on-top --title="Adobe EULA" --window-icon=system-preferences.png --height="550" --width=700 --wrap --button=$"gtk-ok:5" "$(cat /etc/salineos-installer/adobeEULA)"
 Restricted
 exit 0
elif [ "$ret" = "7" ]; then
if [ -f /tmp/packagekit-url-lock-file ]; then
 yad --title=ERROR --text="Package kit is in use, please wait until it is finished." --button=$"gtk-ok:1"
 MainMenu
 exit 0
else
 touch /tmp/packagekit-url-lock-file
fi

Test=$(grep "http://www.deb-multimedia.org" /etc/apt/sources.list)

if [ "$Test" = "" ]; then
 echo ' ' >> /etc/apt/sources.list
 echo ' ' >> /etc/apt/sources.list
 echo "# Marillat For info visit http://www.deb-multimedia.org" >> /etc/apt/sources.list
 echo "deb http://www.deb-multimedia.org wheezy main non-free" >> /etc/apt/sources.list
fi

CodecPackages="deb-multimedia-keyring gstreamer0.10-ffmpeg gstreamer0.10-crystalhd flashplugin-nonfree gstreamer0.10-plugins-bad gstreamer0.10-plugins-ugly gstreamer0.10-fluendo-mp3 unrar libdvdread4 libdvdcss2"

tail -f /usr/bin/salineos-system-utilities | yad --progress --pulsate --title='  ' --no-buttons --text="     Updating package cache, please wait.     \n" 

apt-get update

sleep 1
killall -KILL tail

## Codecs
for i in $CodecPackages; do

pkcon -p -y install $i>>/tmp/packagekit-url-tmp &

sleep 2

(while [ "$(pidof pkcon)" != "" ]; do
CurrentOutput="$(tail --lines=1 /tmp/packagekit-url-tmp)"
echo "# $CurrentOutput" | sed -u "s|# Percentage:	||g" | sed -u "s|100|99|g"
done)| yad --progress --auto-close --no-buttons --window-icon="/usr/share/pixmaps/salineos-installer.png" --title="SalineOS Installer"  --text="          Installing Optional Packages          \n"


done

if [ "$(grep -B 0  "Installed" /tmp/packagekit-url-tmp)" = "" ]; then
 Result="$(cat /tmp/packagekit-url-tmp | grep -v "Transaction" | grep -v "Status" | grep -v "Results" |grep -v "Percentage" | grep -v "Package:" | grep -v "Downloaded")"
else
 Result="          Restricted codecs installed successfully.          \n"
fi
yad --title='       ' --width=275 --text="$Result" --button=$"gtk-ok:1"

rm -rf /tmp/packagekit-url-lock-file
rm -rf /tmp/packagekit-url-tmp

fi

MainMenu
exit 0
}

MoreInfo () {

InfoText=""

if [ "$Operation" = "Clean" ]; then
 InfoText="Clean allows you to optionally remove; log files, flash cookies, cached thumbnails, cache of packages that are kept when installing new software and packages that were installed as dependencies but are no longer required."
elif [ "$Operation" = "Change System Language" ]; then
 InfoText="This action will launch Localizesys, a simple program that will walk you through changing the current system language step by step. Localizesys is used by the SalineOS installer to set the system language."
elif [ "$Operation" = "Install Restricted Multimedia" ]; then
 InfoText="Support for a variety of media formats are possibly under patent protection in some jurisdictions. This script will download and install codecs for decoding most every video and audio format commonly used. Use of these codecs without paying for a license may violate government sanctioned intellectual property rights (Patent rights, not to be confused with copyright), depending on your country of residence. You can purchase the licenses for these codecs at http://www.fluendo.com. This action does exactly the same thing the installer offers to do during install."
elif [ "$Operation" = "Install Wine" ]; then
 InfoText="Installs Wine Is Not an Emulator a compatibility layer that allows Linux based systems to run some Windows .exe files. This will also install WineTricks, a simple program that automates the install of Windows components and a small selection of popular Windows applications."
elif [ "$Operation" = "Install LAMP" ]; then
 InfoText="Install a traditional Linux Apache MySQL PHP server stack; L.A.M.P is one of the most popular server stacks ever constructed. This will install everything you need to test webpages locally, or host your own webpage. If you wish to allow others to connect to your machine's new web server you must open port 80 in your current firewall (Default is SOS Firewall) and if your computer is behind a router, you must ensure that port 80 is forwarded to your machine."
elif [ "$Operation" = "Local DNS" ]; then
 InfoText="DNS or Domain Name System is the system that gets the machine readible IP addresses from human readible web addresses (Such as http://www.salineos.com). This action will setup a local cache of all the IP addresses of web pages you visit.  This will slightly speed up web browsing for web sites you visit more than once, but will create a local record of your browsing activity."
elif [ "$Operation" = "Import Key" ]; then
 InfoText="If you add a repository to your /etc/apt/sources.list then you will most likely also have to add its' gpg key.  This gpg key is a security measure, you should never add a key from a source you do not absolutely trust."
elif [ "$Operation" = "Resize Swap" ]; then
 InfoText="Allows you to resize the SalineOS swap file."
elif [ "$Operation" = "Set Clock" ]; then
 InfoText="Set the system clock. SalineOS includes ntp which should keep your clock synced to a remote server. This option is most useful on machines without internet access."
elif [ "$Operation" = "Drivers" ]; then
 InfoText="Starts an automated script to detect if there are any proprietary closed source drivers available for your system. If found, it will offer to install these drivers for you."
fi

yad --title="SalineOS System Utilities" --width="300" --wrap --text="$InfoText" --button=$"gtk-ok:1"

MainMenu
exit 0

}


MainMenu () { 
Operation=""
OperationArray=""

if [ -f /swap/salineos-swap ]; then

OperationArray=( "Clean" "Launch the Clean utility to reclaim disk space" "Change System Language" "Change the system language with Localizesys" "Drivers" "Check for and install proprietary graphics drivers" "Import Key" "Have apt trust a repository by importing its' GPG key" "Install Restricted Multimedia" "Install potentially patent encumbered multimedia codecs" "Install Wine" "Install the Windows compatibility layer Wine, with extras" "Install LAMP" "Install a traditional Linux Apache MySQL PHP server stack." "Local DNS" "Setup local DNS server on this machine" "Set Clock" "Set the system's time and date" "Resize Swap" "Resize the SalineOS swapfile")

else

OperationArray=( "Clean" "Launch the Clean utility to reclaim disk space" "Change System Language" "Change the system language with Localizesys" "Drivers" "Check for and install proprietary graphics drivers" "Import Key" "Have apt trust a repository by importing its' GPG key" "Install Restricted Multimedia" "Install potentially patent encumbered multimedia codecs" "Install Wine" "Install the Windows compatibility layer Wine, with extras" "Install LAMP" "Install a traditional Linux Apache MySQL PHP server stack." "Local DNS" "Setup local DNS server on this machine" "Set Clock" "Set the system's time and date")

fi

Operation=$(yad --wrap --width="700" --height="400" --list --title="SalineOS System Utilities" --window-icon="preferences-system" --always-print-result --print-column="1" --column="Action" --column="Description" --text="Welcome to SalineOS system utilities. This program allows you to tweak and manage your system with a set of straight forward and simple utilities. To view more detailed information about each action simply highlight it and press Info." --button=$"gtk-quit:3" --button=$"gtk-info:5" --button=$"gtk-ok:7" "${OperationArray[@]}")

ret="$?"

Operation=$(echo "$Operation" | awk -F '|' '{print $1}')

if [ "$ret" = "252" ]; then
 exit 0
elif [ "$ret" = "3" ]; then
 exit 0
elif [ "$Operation" = "" ]; then
 yad --window-icon="preferences-system" --title="SalineOS Utils" --text="          You must select an action before continuing.          \n" --button=$"gtk-ok:1"
 MainMenu
 exit 0
elif [ "$ret" = "5" ]; then
 MoreInfo
 exit 0
elif [ "$Operation" = "Install LAMP" ]; then
 gksudo 'exec /usr/bin/xfce4-terminal -x /usr/bin/salineos-system-utilities-LAMP'
 MainMenu
 exit 0
elif [ "$Operation" = "Clean" ]; then
 /usr/bin/Clean
 MainMenu
 exit 0
elif [ "$Operation" = "Change System Language" ]; then
 gksudo /usr/bin/localizesys
 MainMenu
 exit 0
elif [ "$Operation" = "Drivers" ]; then
 gksudo /usr/bin/magix-driver-installer
 exit 0
elif [ "$Operation" = "Install Restricted Multimedia" ]; then
 Restricted
 exit 0
elif [ "$Operation" = "Local DNS" ]; then
 gksudo /usr/bin/packagekit-url 'pkgkit://dnsmasq'
 gksudo sed -i -e 's|#prepend domain-name-servers|prepend domain-name-servers|g' /etc/dhcp/dhclient.conf
 MainMenu
 exit 0
elif [ "$Operation" = "Install Wine" ]; then
 gksudo /usr/bin/salineos-system-utilities-INSTALLWINE
 MainMenu
 exit 0
elif [ "$Operation" = "Import Key" ]; then
 Key=$(yad --window-icon="preferences-system" --title="Import Key" --width=250 --entry --text="Enter the key you wish to import:" --button=$"gtk-cancel:3" --button=$"gtk-ok:2")

 ret="$?"

 if [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 elif [ "$Key" = "" ]; then
  yad --title="ERROR" --text="          No key supplied.          \n" --button=$"gtk-ok:1"
  MainMenu
  exit 0
 fi

 gksudo exec "/usr/bin/xterm -hold -e /usr/bin/gpgimport $Key"
 MainMenu
 exit 0
elif [ "$Operation" = "Resize Swap" ]; then
 gksudo /usr/bin/resize-swap
 MainMenu
 exit 0
elif [ "$Operation" = "Set Clock" ]; then
CurrentDate=$(yad --window-icon="clock" --calendar --title="Set Clock" --button=$"gtk-cancel:3" --button=$"gtk-ok:2")
 
ret="$?"

 if [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 fi

CurrentDate=$(echo "$CurrentDate" | awk -F '/' '{print $1$2}')

HourArray=( "12 AM (Midnight)" "00" "1 AM" "01" "2 AM" "02" "3 AM" "03" "4 AM" "04" "5 AM" "05" "6 AM" "06" "7 AM" "07" "8 AM" "08" "9 AM" "09" "10 AM" "10" "11 AM" "11" "12 PM" "12" "1 PM" "13" "2 PM" "14" "3 PM" "15" "4 PM" "16" "5 PM" "17" "6 PM" "18" "7 PM" "19" "8 PM" "20" "9 PM" "21" "10 PM" "22" "11 PM" "23" )

Hour=$(yad --list --width=450 --height="600" --print-column="2" --column="Standard" --column="24 hour" --title="Set Clock" --window-icon="clock" --button=$"gtk-cancel:3" --button=$"gtk-ok:2" "${HourArray[@]}")

ret="$?"

 if [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 fi

Hour=$(echo "$Hour" | awk -F '|' '{print $1}')

Minute=$(yad --scale --window-icon="clock" --title="Set Clock" --text="Set the current minute" --max-value=60 --min-value=1 --button=$"gtk-cancel:3" --button=$"gtk-ok:2")

ret="$?"

 if [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 fi

Minute=$(echo "$Minute" | awk -F '|' '{print $1}')

if [ "$Minute" = "1" ]; then
 Minute="01"
elif [ "$Minute" = "2" ]; then
 Minute="02"
elif [ "$Minute" = "3" ]; then
 Minute="03"
elif [ "$Minute" = "4" ]; then
 Minute="04"
elif [ "$Minute" = "5" ]; then
 Minute="05"
elif [ "$Minute" = "6" ]; then
 Minute="06"
elif [ "$Minute" = "7" ]; then
 Minute="07"
elif [ "$Minute" = "8" ]; then
 Minute="08"
elif [ "$Minute" = "9" ]; then
 Minute="09"
fi

gksudo date "$CurrentDate$Hour$Minute"
gksudo hwclock -w --localtime
 
fi


}


MainMenu
exit
