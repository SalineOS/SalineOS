#!/bin/bash
# Licensed under the GNU General Public License Version 2
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
####################################################################################################
# Copyright 2011,2012 Anthony Nordquist http://www.salineos.com salinelinux@gmail.com 


Restricted () {

yad --wrap --height=300 --width=500 --center --button=$"$READBTN Adobe EULA:3" --button=$"$DECLINE:5" --button=$"$AGREEANDINSTALL:7" --title="SOS Utils" --window-icon=/usr/share/pixmaps/salineos-installer.png --text="$MULTIMEDIATEXT"

ret="$?"

if [ "$ret" = "252" ]; then
 MainMenu
 exit 0
elif [ "$ret" = "5" ]; then
 MainMenu
 exit 0
elif [ "$ret" = "3" ]; then
 yad --list --column='   ' --on-top --title="Adobe EULA" --window-icon=system-preferences.png --height="550" --width=700 --wrap --button=$"gtk-ok:5" "$(cat /etc/salineos-installer/adobeEULA)"
 Restricted
 exit 0
elif [ "$ret" = "7" ]; then
if [ -f /tmp/packagekit-url-lock-file ]; then
 yad --title=ERROR --text="$INUSE" --button=$"gtk-ok:1"
 MainMenu
 exit 0
else
 touch /tmp/packagekit-url-lock-file
fi
fi

PIUArray=( 'PidOfUsing=$(fuser -a /var/lib/dpkg/lock)' )
PNArray=( 'NameOfUsing=$(ps -p $PidOfUsing -o comm=)' )

BigArray=( 'Test=$(grep "http://www.deb-multimedia.org" /etc/apt/sources.list)

if [ "$Test" = "" ]; then
 echo ' ' >> /etc/apt/sources.list
 echo ' ' >> /etc/apt/sources.list
 echo "# Marillat For info visit http://www.deb-multimedia.org" >> /etc/apt/sources.list
 echo "deb http://www.deb-multimedia.org wheezy main non-free" >> /etc/apt/sources.list
fi

CodecPackages="deb-multimedia-keyring gstreamer0.10-ffmpeg gstreamer0.10-crystalhd flashplugin-nonfree gstreamer0.10-plugins-bad gstreamer0.10-plugins-ugly gstreamer0.10-fluendo-mp3 unrar libdvdread4 libdvdcss2"

tail -f /tmp/SOS-Utils-Restricted | yad --progress --pulsate --title="SOS-Utils" --no-buttons --auto-close --text="     $UPDATINGPACKAGECACHE     \n" &

apt-get update

sleep 1
killall -KILL tail

## Codecs
for i in $CodecPackages; do

pkcon -p -y install $i>>/tmp/packagekit-url-tmp &

sleep 2

(while [ "$(pidof pkcon)" != "" ]; do
CurrentOutput="$(tail --lines=1 /tmp/packagekit-url-tmp)"
echo "# $CurrentOutput" | sed -u "s|# Percentage:	||g" | sed -u "s|100|99|g"
done)| yad --progress --auto-close --no-buttons --window-icon="/usr/share/pixmaps/salineos-installer.png" --title="SOS Utils"  --text="          $INSTALLINGOPTIONAL          \n"


done

if [ "$(grep -B 0  "Installed" /tmp/packagekit-url-tmp)" = "" ]; then
 Result="$(cat /tmp/packagekit-url-tmp | grep -v "Transaction" | grep -v "Status" | grep -v "Results" |grep -v "Percentage" | grep -v "Package:" | grep -v "Downloaded")"
else
 Result="          $CODECSDONE          \n"
fi
yad --title='       ' --width=275 --text="$Result" --button=$"gtk-ok:1"

exit 0' )

cat > /tmp/SOS-Utils-Restricted << FOO
#!/bin/bash

## Load translations

LanguageLess="$(echo "$LANG" | awk -F '.' '{print $1}')"

if [ -f /etc/clean/Translations/$LanguageLess ]; then
 . /etc/salineos-system-utilities/Translations/$LanguageLess
else
 . /etc/salineos-system-utilities/Translations/en_US
fi

${PIUArray[@]}

${PNArray[@]}

if [ "\$PidOfUsing" != "" ]; then
 yad --title="SOS Utils" $Icon --wrap --width="275" --text="Application \$NameOfUsing with process ID\$PidOfUsing has an exclusive lock on the apt directory. Please allow this application to finish and close it before trying this operation again." --button=$"gtk-ok:3"

rm -rf /tmp/packagekit-url-lock-file
MainMenu
exit 0
fi

${BigArray[@]}

FOO

chmod +x /tmp/SOS-Utils-Restricted
gksudo /tmp/SOS-Utils-Restricted
sleep 1 
rm -rf /tmp/SOS-Utils-Restricted
rm -rf /tmp/packagekit-url-lock-file
rm -rf /tmp/packagekit-url-tmp

MainMenu
exit 0
}

MoreInfo () {

InfoText=""

if [ "$Operation" = "Clean" ]; then
 InfoText="$CLEANINFO"
elif [ "$Operation" = "Change System Language" ]; then
 InfoText="$LANGUAGEINFO"
elif [ "$Operation" = "Install Restricted Multimedia" ]; then
 InfoText="$RESTRICTEDINFO"
elif [ "$Operation" = "Install Wine" ]; then
 InfoText="$WINEINFO"
elif [ "$Operation" = "Install LAMP" ]; then
 InfoText="$LAMPINFO"
elif [ "$Operation" = "Local DNS" ]; then
 InfoText="$DNSINFO"
elif [ "$Operation" = "Import Key" ]; then
 InfoText="$KEYINFO"
elif [ "$Operation" = "Resize Swap" ]; then
 InfoText="$SWAPINFO"
elif [ "$Operation" = "Set Clock" ]; then
 InfoText="$CLOCKINFO"
elif [ "$Operation" = "Drivers" ]; then
 InfoText="$DRIVERSINFO"
fi

yad --title="SalineOS System Utilities" --width="300" --wrap --text="$InfoText" --button=$"gtk-ok:1"

MainMenu
exit 0

}


MainMenu () { 
Operation=""
OperationArray=""

if [ -f /swap/salineos-swap ]; then

OperationArray=( "Clean" "$CLEANMENU" "Change System Language" "$LANGUAGEMENU" "Drivers" "$DRIVERSMENU" "Import Key" "$KEYMENU" "Install Restricted Multimedia" "$MULTIMEDIAMENU" "Install Wine" "$WINEMENU" "Install LAMP" "$LAMPMENU" "Local DNS" "$DNSMENU" "Set Clock" "$CLOCKMENU" "Resize Swap" "$SWAPMENU")

else

OperationArray=( "Clean" "$CLEANMENU" "Change System Language" "$LANGUAGEMENU" "Drivers" "$DRIVERSMENU" "Import Key" "$KEYMENU" "Install Restricted Multimedia" "$MULTIMEDIAMENU" "Install Wine" "$WINEMENU" "Install LAMP" "$LAMPMENU" "Local DNS" "$DNSMENU" "Set Clock" "$CLOCKMENU")

fi

Operation=$(yad --wrap --width="700" --height="400" --list --title="SalineOS System Utilities" --window-icon="preferences-system" --always-print-result --print-column="1" --column="$ACTION" --column="$DESCRIPTION" --text="$WELCOMETEXT" --button=$"gtk-quit:3" --button=$"gtk-info:5" --button=$"gtk-ok:7" "${OperationArray[@]}")

ret="$?"

Operation=$(echo "$Operation" | awk -F '|' '{print $1}')

if [ "$ret" = "252" ]; then
 exit 0
elif [ "$ret" = "3" ]; then
 exit 0
elif [ "$Operation" = "" ]; then
 yad --window-icon="preferences-system" --title="SalineOS Utils" --text="          $MUSTSELECTACTION          \n" --button=$"gtk-ok:1"
 MainMenu
 exit 0
elif [ "$ret" = "5" ]; then
 MoreInfo
 exit 0
elif [ "$Operation" = "Install LAMP" ]; then
 gksudo '/usr/bin/xterm -hold -e /usr/bin/salineos-system-utilities-LAMP'
 MainMenu
 exit 0
elif [ "$Operation" = "Clean" ]; then
 /usr/bin/Clean
 MainMenu
 exit 0
elif [ "$Operation" = "Change System Language" ]; then
 gksudo /usr/bin/localizesys
 MainMenu
 exit 0
elif [ "$Operation" = "Drivers" ]; then
 gksudo /usr/bin/magix-driver-installer
 exit 0
elif [ "$Operation" = "Install Restricted Multimedia" ]; then
 Restricted
 exit 0
elif [ "$Operation" = "Local DNS" ]; then
 DNSArray=( '/usr/bin/packagekit-url pkgkit://dnsmasq
 sed -i -e "s|#prepend domain-name-servers|prepend domain-name-servers|g" /etc/dhcp/dhclient.conf' )
 cat > /tmp/SOS-Utils-DNS << FOO
#!/bin/bash
${DNSArray[@]}

exit 0

FOO

 chmod +x /tmp/SOS-Utils-DNS
 gksudo /tmp/SOS-Utils-DNS
 sleep 1
 rm -rf /tmp/SOS-Utils-DNS
 MainMenu
 exit 0
elif [ "$Operation" = "Install Wine" ]; then
 gksudo /usr/bin/salineos-system-utilities-INSTALLWINE
 MainMenu
 exit 0
elif [ "$Operation" = "Import Key" ]; then
 Key=$(yad --window-icon="preferences-system" --title="Import Key" --width=250 --entry --text="$KEYIMPORT" --button=$"gtk-cancel:3" --button=$"gtk-ok:2")

 ret="$?"

 if [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 elif [ "$Key" = "" ]; then
  yad --title="ERROR" --text="          $NOKEY.          \n" --button=$"gtk-ok:1"
  MainMenu
  exit 0
 fi

 gksudo '/usr/bin/xterm -hold -e /usr/bin/gpgimport' $Key
 MainMenu
 exit 0
elif [ "$Operation" = "Resize Swap" ]; then
 gksudo /usr/bin/resize-swap
 MainMenu
 exit 0
elif [ "$Operation" = "Set Clock" ]; then
CurrentDate=$(yad --window-icon="clock" --calendar --title="$SETCLOCK" --button=$"gtk-cancel:3" --button=$"gtk-ok:2")
 
ret="$?"

 if [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 fi

CurrentDate=$(echo "$CurrentDate" | awk -F '/' '{print $1$2}')

HourArray=( "12 AM (Midnight)" "00" "1 AM" "01" "2 AM" "02" "3 AM" "03" "4 AM" "04" "5 AM" "05" "6 AM" "06" "7 AM" "07" "8 AM" "08" "9 AM" "09" "10 AM" "10" "11 AM" "11" "12 PM" "12" "1 PM" "13" "2 PM" "14" "3 PM" "15" "4 PM" "16" "5 PM" "17" "6 PM" "18" "7 PM" "19" "8 PM" "20" "9 PM" "21" "10 PM" "22" "11 PM" "23" )

Hour=$(yad --list --width=450 --height="600" --print-column="2" --column="$STANDARD" --column="24 $SETHOUR" --title="$SETCLOCK" --window-icon="clock" --button=$"gtk-cancel:3" --button=$"gtk-ok:2" "${HourArray[@]}")

ret="$?"

 if [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 fi

Hour=$(echo "$Hour" | awk -F '|' '{print $1}')

Minute=$(yad --scale --window-icon="clock" --title="$SETCLOCK" --text="$SETMINUTE" --max-value=60 --min-value=1 --button=$"gtk-cancel:3" --button=$"gtk-ok:2")

ret="$?"

 if [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 fi

Minute=$(echo "$Minute" | awk -F '|' '{print $1}')

if [ "$Minute" = "1" ]; then
 Minute="01"
elif [ "$Minute" = "2" ]; then
 Minute="02"
elif [ "$Minute" = "3" ]; then
 Minute="03"
elif [ "$Minute" = "4" ]; then
 Minute="04"
elif [ "$Minute" = "5" ]; then
 Minute="05"
elif [ "$Minute" = "6" ]; then
 Minute="06"
elif [ "$Minute" = "7" ]; then
 Minute="07"
elif [ "$Minute" = "8" ]; then
 Minute="08"
elif [ "$Minute" = "9" ]; then
 Minute="09"
fi

## Ask if we should set the hardware clock to UTC or Localtime.

yad --width="250" --wrap --window-icon="clock" --title="$SETCLOCK" --text="$HARDWARECLOCK" --button=$"UTC:3" --button=$"$LOCALTIME:5"

ret="$?"

if [ "$ret" = "252" ]; then
 MainMenu
 exit 0
elif [ "$ret" = "3" ]; then
 cat > /tmp/SOS-Utils-Time << FOO
#!/bin/bash
date "$CurrentDate$Hour$Minute"
hwclock -w --utc
if [ "\$(grep "LOCALTIME" /etc/adjtime)" != "" ]; then
 sed -i -e "s|LOCALTIME|UTC|g" /etc/adjtime
fi
exit
FOO
 chmod +x /tmp/SOS-Utils-Time
 gksudo /tmp/SOS-Utils-Time
 rm -rf /tmp/SOS-Utils-Time
 MainMenu
 exit 0
elif [ "$ret" = "5" ]; then
cat > /tmp/SOS-Utils-Time << FOO
#!/bin/bash
date "$CurrentDate$Hour$Minute"
hwclock -w --localtime
if [ "\$(grep "UTC" /etc/adjtime)" != "" ]; then
 sed -i -e "s|UTC|LOCALTIME|g" /etc/adjtime
fi

exit
FOO
 cat /tmp/SOS-Utils-Time
 chmod +x /tmp/SOS-Utils-Time
 gksudo /tmp/SOS-Utils-Time
 rm -rf /tmp/SOS-Utils-Time
 MainMenu
 exit 0
fi

fi

}

## Load translations

LanguageLess="$(echo "$LANG" | awk -F '.' '{print $1}')"

if [ -f /etc/clean/Translations/$LanguageLess ]; then
 . /etc/salineos-system-utilities/Translations/$LanguageLess
else
 . /etc/salineos-system-utilities/Translations/en_US
fi

MainMenu
exit
