#!/bin/bash
# Licensed under the GNU General Public License Version 2
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
####################################################################################################
# Copyright 2012 Anthony Nordquist http://www.salineos.com salinelinux@gmail.com 

## Load translations

LanguageLess="$(echo "$LANG" | awk -F '.' '{print $1}')"

if [ -f /etc/procurator/Translations/$LanguageLess ]; then
 . /etc/procurator/Translations/$LanguageLess
else
 . /etc/procurator/Translations/en_US
fi

Info='yad --center --window-icon=kvm --title=Procurator'

Question='yad  --wrap --center --image=gtk-dialog-question --button=gtk-no:1 --button=gtk-yes:0 --title=Procurator --window-icon=kvm'

SingleMenu='yad  --center --list --column="Please choose one." --title=Procurator --window-icon=kvm'

Menu='yad  --center --list --title=Procurator --window-icon=kvm --print-column=1'

Progress='yad --center --progress --auto-close --title=Procurator --no-buttons --window-icon=kvm'

TextEntry='yad --center --entry --title=Procurator --window-icon=kvm'



Input="$1"
ISOName="$2"

mkdir -p $HOME/.procurator/disks
mkdir -p $HOME/.procurator/notes

SystemRam=$(free -m | grep 'Mem' | awk '{print $2}')

RamSize=$(($SystemRam / 2))


NameDisk () {

NewDiskName=$(yad --entry --window-icon=kvm --width=250 --wrap --title="Procurator" --text="$ENTERNAME" --button=$"gtk-ok:2")

ret="$?"

NewDiskName=$(echo "$NewDiskName" | sed -e 's| ||g')

if [ "$ret" = "252" ]; then
 exit 0
elif [ "$NewDiskName" = "" ]; then
 NewDiskName=$(date +%Y%m%d-%H%M)
fi

if [ -f "$HOME/.procurator/disk/$NewDiskName" ]; then
 $Question --text="$FILEEXISTS"
 if [ "$?" != "0" ]; then
  NameDisk
  exit 0
 fi
fi


NewDiskNotes=$(yad --entry --width=250 --wrap --window-icon=kvm --title="Procurator" --text="$NOTES" --button=$"gtk-ok:2")

if [ -f "$HOME/.procurator/notes/$NewDiskName" ]; then
 rm -rf "$HOME/.procurator/notes/$NewDiskName"
fi

if [ "$NewDiskNotes" != "" ]; then
 echo "$NewDiskNotes">>"$HOME/.procurator/notes/$NewDiskName"
fi



kvm-img create -f qcow2 -o size="$NewDiskSize"M,preallocation=metadata,cluster_size=2M $HOME/.procurator/disks/"$NewDiskName"


$Info --text="Creation of $NewDiskName complete." --button=$"gtk-ok:1"


MainMenu
exit 0

}


CreateNewDisk () {

NewDiskSize=""

NewDiskSize=$(yad --list --title=Procurator --window-icon=kvm --print-column=1 --height=350 --column="Size In Megabytes" --column="Size In Gigabytes" --text="$DISKSIZE" --button=$"gtk-cancel:3" --button=$"gtk-ok:2" Custom '    Custom' 1024 '        1' 2048 '        2' 3072 '        3' 4096 '        4' 5120 '        5' 6144 '        6' 7168 '        7' 8192 '        8' 9216 '        9' 10240 '        10' 11264  '        11' 12288 '        12' 13312 '        13' 14336 '        14' 15360 '        15' 16384 '        16' 17408 '        17' 18432 '        18' 19456 '        19' 20480 '        20' 21504 '        21' 22528 '        22' 23552 '        23' 24576 '        24' 25600 '        25' 26624 '        26' 27648 '        27' 28672 '        28' 29696 '        29' 30720 '        30' 31744 '        31' 32768 '        32' 33792 '        33' 34816 '        34' 35840 '        35' 36864 '        36' 37888 '        37' 38912 '        38' 39936 '        39' 40960 '        40' 41984 '        41' 43008 '        42' 44032 '        43' 45056 '        44' 46080 '        45' 47104 '        46' 48128 '        47' 49152 '        48' 50176 '        49' 51200 '        50')

ret="$?"

NewDiskSize=$(echo "$NewDiskSize" | awk -F '|' '{print $1}')

if [ "$ret" = "252" ]; then
 MainMenu
 exit 0 
elif [ "$ret" = "3" ]; then
 MainMenu
 exit 0
elif [ "$NewDiskSize" = "Custom" ]; then
 NewDiskSize=$(yad --entry --width=250 --window-icon=kvm --wrap --title="Procurator" --text="$ENTERSIZE" --button=$"gtk-cancel:3" --button=$"gtk-ok:2")

 ret="$?"

 if [ "$ret" = "252" ]; then
  MainMenu
  exit 0
 elif [ "$ret" = "3" ]; then
  MainMenu
  exit 0
 elif [ "$NewDiskSize" = "" ]; then
  MainMenu
  exit 0
 fi
 NewDiskSize=$(($NewDiskSize * 1024))
fi



NameDisk

}


MainMenu () {

Menu=""

for i in $(ls $HOME/.procurator/disks); do
 Disk="$i"
 DiskSize=$(du -c --apparent-size "$HOME/.procurator/disks/$i" | grep "total" | awk '{print $1}')
 DiskSize=$(($DiskSize / 1024))
 DiskSize="$DiskSize"M
if [ -f $HOME/.procurator/notes/$i ]; then
 Note=$(cat "$HOME/.procurator/notes/$i")
else
 Note="None"
fi
 if [ "$Menu" = "" ]; then
  Menu=( "$Disk" "$DiskSize" "$Note" )
 else
  Menu=( "${Menu[@]}" "$Disk" "$DiskSize" "$Note" )
 fi
done

if [ "$Input" != "" ]; then
Selection=$(yad --height=350 --wrap --always-print-result --center --list --column="$VDISKS" --column="$SIZE" --column="$NOTES1" --title=Procurator --window-icon=kvm --text="$MAKEAVAILABLE $ISOName" --button=$"gtk-help:3" --button=$"$DELSELECTED:5" --button=$"$CREATENEW:7" --button=$"gtk-ok:9" "${Menu[@]}" )

ret="$?"

Selection=$(echo "$Selection" | awk -F '|' '{print $1}')

if [ "$ret" = "252" ]; then
 exit 0 
elif [ "$ret" = "3" ]; then
 $Info --wrap --width=250 --title="Procurator Help" --text="$HELPTEXT" --button=$"gtk-ok:1"
 MainMenu
 exit 0
elif [ "$ret" = "5" ]; then
 if [ "$Selection" = "" ]; then
  $Info --text="$NODISK"  --button=$"gtk-ok:1"
  MainMenu
  exit 0
 fi
 $Question --width=250 --text="$WARNING1 "$Selection" $WARNING2"
 if [ "$?" = "0" ]; then
  rm "$HOME/.procurator/disks/$Selection"
  rm "$HOME/.procurator/notes/$Selection"
  MainMenu
  exit 0
 else
  MainMenu
  exit 0
 fi
elif [ "$ret" = "7" ]; then
 CreateNewDisk
 exit 0
elif [ "$ret" = "9" ]; then
 if [ "$Selection" != "" ]; then
  HardDisk=$(echo "-drive file="$HOME/.procurator/disks/$Selection",cache=none,media=disk")
 fi
 kvm  -boot order=dc -m $RamSize -smp maxcpus=maxcpus -soundhw ac97 -sdl -cdrom $Input $HardDisk 
 exit 0
fi


else

Selection=$(yad --height=350 --wrap --always-print-result --center --list --column="$VDISKS" --column="$SIZE"  --column="$NOTES1" --title=Procurator --window-icon=kvm --button=$"gtk-help:3" --button=$"$DELSELECTED:5" --button=$"$CREATENEW:7" --button=$"$BOOTSELECTED:9" "${Menu[@]}")

ret="$?"

Selection=$(echo "$Selection" | awk -F '|' '{print $1}')

if [ "$ret" = "252" ]; then
 exit 0 
elif [ "$ret" = "3" ]; then
 $Info --wrap --width=250 --title="$HELPTEXT" --button=$"gtk-ok:1"
 MainMenu
 exit 0
elif [ "$ret" = "5" ]; then
 if [ "$Selection" = "" ]; then
  $Info --text="$NODISK" --button=$"gtk-ok:1"
  MainMenu
  exit 0
 fi
 $Question --width=250 --text="$WARNING1 "$Selection" $WARNING2"
 if [ "$?" = "0" ]; then
  rm "$HOME/.procurator/disks/$Selection"
  rm "$HOME/.procurator/notes/$Selection"
  MainMenu
  exit 0
 else
  MainMenu
  exit 0
 fi
elif [ "$ret" = "7" ]; then
 CreateNewDisk
 exit 0
elif [ "$ret" = "9" ]; then
 if [ "$Selection" = "" ]; then
  $Info --text="$MUSTSELECT"
  MainMenu
  exit 0
 fi
if [ -a /dev/cdrom ]; then
kvm  -boot order=dc -m "$RamSize" -sdl -smp maxcpus=maxcpus -soundhw ac97  -drive file="$HOME/.procurator/disks/$Selection",cache=none,media=disk -cdrom /dev/cdrom
else
kvm -boot order=dc -m "$RamSize" -sdl -smp maxcpus=maxcpus -soundhw ac97 -drive file="$HOME/.procurator/disks/$Selection",cache=none,media=disk
fi
 

exit 0
fi

fi


}

MainMenu

exit 0

