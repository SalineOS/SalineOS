#!/bin/bash

## Make sure X doesn't handle power management on the display.
xset s off
xset s noblank

## Check for Xv Support for Parole

TestXv=$(xvinfo | grep "no adaptors present")

if [ "$TestXv" = "" ]; then 
 parole --xv true
else
 parole --xv false
fi

## Start Magix 
if [ ! -f /etc/magix-driver-installer/dont-run ]; then
if [ ! -f $HOME/.magix-dont-run ]; then

## The function for showing notifications and running magix-launcher

StartMagix () {

if [ "$NvidiaCard" = "yes" ]; then
 sleep 10
 touch /tmp/magix-nvidia-card
 notify-send -u normal -i jockey -t 30000 '^Proprietary drivers are
available for your
Nvidia graphics chipset' &
 yad --notification --icon="jockey" --title="Proprietary Drivers" --command="/usr/bin/magix-launcher"
fi

if [ "$AtiCard" = "yes" ]; then
 ###################################
 ## Disable this for now
 exit 0
 ###################################
 sleep 10
 touch /tmp/magix-ati-card
 notify-send -u normal -i jockey -t 30000 '^Proprietary drivers are
available for your
ATI graphics chipset' &
 yad --notification --icon="jockey" --title="Proprietary Drivers" --command="/usr/bin/magix-launcher"
fi

exit 

}

## Make sure our temp file is empty
if [ -f /tmp/magix-driver-installer ]; then
 rm -rf /tmp/magix-driver-installer
fi

## Test for an nVidia card
lspci &>> /tmp/magix-driver-installer
Nvidia=$(grep -B 0  "VGA compatible controller: nVidia" /tmp/magix-driver-installer)

##################################################### Start nVidia

if [ "$Nvidia" != "" ]; then
 NvidiaCard="yes"
else
 NvidiaCard="no"
fi

## Test if a legacy card is present.
if [ "$NvidiaCard" = "yes" ]; then
 
Legacy=$(echo $Nvidia | awk -F ' ' '{print $7}')

if [ "$Legacy" = "NV4" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV5M64" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV5" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV6" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV10" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV10DDR" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV15" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV15DDR" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV15BR" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV10GL" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV15GL" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV11" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV20" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV18" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV25" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV28" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV17GL" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV20DCC" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV18GL" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV25GL" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV28GL" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV28GLM" ]; then
  Driver="Too old"
elif [ "$Legacy" = "NV34" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV31" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36.2" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36.1" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36.4" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV30" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV35" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV38" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV34M" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV34GLM" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV31M" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV37GL" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV34GL" ]; then 
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV35GL" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV30GL" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36GL" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV38GL" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV31GL" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV31GLM" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36.5" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36M" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36GLM" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36M" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV31GLM" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV31M" ]; then
  Driver="173xx Legacy Nvidia"
elif [ "$Legacy" = "NV36MAP" ]; then
  Driver="173xx Legacy Nvidia"
else
 Driver="Current"
fi


 if [ "$Driver" = "Too old" ]; then
  touch $HOME/.magix-dont-run
  exit 0
 else
  StartMagix
 fi
fi

## Check for ATI card.

if [ "$NvidiaCard" = "no" ]; then
 grep -B 0  "VGA compatible"  /tmp/magix-driver-installer &>>/tmp/magix-ati
 ATI=$(grep -B 0  "ATI" /tmp/magix-ati)
 rm -rf /tmp/magix-ati
 if [ "$ATI" != "" ]; then
  AtiCard="yes"
  StartMagix
 else
  touch $HOME/.magix-dont-run
  exit 0
 fi
fi


 
fi
fi

exit
