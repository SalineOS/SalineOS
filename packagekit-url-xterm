#!/bin/bash
# Licensed under the GNU General Public License Version 2
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA  02110-1301  USA
####################################################################################################
## Copyright Anthony Nordquist 2011-2012 salinelinux@gmail.com http://www.salineos.com

## Set a variable of the input :)
## Not needed but I like it this way.
Input="$@"

## Got root?
testroot="$(whoami)"

if [ "$testroot" != "root" ]; then
 echo "Package Kit URL must be run with root privileges, press Enter to exit."
 read Nothing
 exit 0
fi


## Use a lockfile since more than one running instance is bad mojo. 

if [ -f /tmp/packagekit-url-lock-file ]; then
 echo "There can only have one running instance of Package Kit URL. If there are not any operations in progress then please remove the lockfile. Running the command sudo rm -rf /tmp/packagekit-url-lock-file will remove the lockfile."
 exit
else
 touch /tmp/packagekit-url-lock-file
fi

if [ -f /tmp/packagekit-url-tmp ]; then
 rm -rf /tmp/packagekit-url-tmp
fi

############################################################################################################
##Install and remove section
## Parse the needed information from the passed input.
## Includes support for apturl links. 
if [ "$(echo $Input | grep "apt:")" = "" ]; then
 Package=$(echo "$Input" | awk -F "/" '{print $3}')
 Operation=$(echo "$Input" | awk -F "/" '{print $4}')  
else
 if [ "$(echo $Input | grep "apt://")" != "" ]; then
  PackageStart=$(echo "$Input" | awk -F "/" '{print $3}') 
  Operation="install"
   if [ "$(echo $PackageStart | grep "?")" = "" ]; then
    Package="$PackageStart" 
   else
     Package="$(echo "$PackageStart" | awk -F "?" '{print $1}')"
   fi
 else 
 Operation="install"
 PackageStart=$(echo "$Input" | awk -F "apt:" '{print $2}')
  if [ "$(echo $PackageStart | grep "?")" = "" ]; then
   Package="$PackageStart" 
  else
   Package="$(echo "$PackageStart" | awk -F "?" '{print $1}')"
  fi
 fi
fi


## Do everything else.

if [ "$Operation" = "install" ]; then
 echo -n "This will install $Package. Continue with installation? [y/n]:"
 read Answer
  if [ "$Answer" = "y" ]; then
   pkcon -p -y install $Package
   echo -n "Package Kit URL operation complete, press Enter to exit"
   read Nothing
   rm -rf /tmp/packagekit-url-lock-file
   exit
  else
   echo -n "Installation cancelled, press Enter to exit."
   read Nothing
  rm -rf /tmp/packagekit-url-lock-file
  exit
  fi
elif [ "$Operation" = "" ]; then
 echo "This will install $Package. Continue with installation? [y/n]:"
 read Answer
  if [ "$Answer" = "y" ]; then
   pkcon -p -y install $Package
   echo -n "Package Kit URL operation complete, press Enter to exit"
   read Nothing
   rm -rf /tmp/packagekit-url-lock-file
   exit
  else
   echo -n "Installation cancelled, press Enter to exit."
   read Nothing
  rm -rf /tmp/packagekit-url-lock-file
  exit
  fi
elif [ "$Operation" = "remove" ]; then
 echo -n "This will remove $Package. Continue with removal? [y/n]:"
 read Answer
  if [ "$Answer" = "y" ]; then
   pkcon -p -y remove $Package
   echo -n "Packagekit URL operation complete, press Enter to exit."
   read Nothing
   rm -rf /tmp/packagekit-url-lock-file
   exit
  else
   echo -n "Removal cancelled, press Enter to exit."
   read Nothing
   rm -rf /tmp/packagekit-url-lock-file
   exit
  fi
else
 echo -n "Invalid Package Kit URL, press Enter to exit."
  read Nothing
  rm -rf /tmp/packagekit-url-lock-file
  exit
fi

## Clear the lockfile and temp file then exit
rm -rf /tmp/packagekit-url-lock-file
rm -rf /tmp/packagekit-url-tmp
exit
