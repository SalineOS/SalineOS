1. 소개

Wine은 Microsoft Windows 프로그램(DOS, Windows 3.x, Win32 실행 파일
포함)을 유닉스 상에서 실행할 수 있게 해 주는 프로그램입니다.  Wine은
Microsoft Windows 바이너리를 로드하고 실행하는 프로그램 로더와
Unix와 X11 API를 써서 Windows API를 구현한 라이브러리(Winelib)로
이루어져 있습니다.  이 라이브러리는 Win32 코드를 유닉스 실행 파일로
이식하는 용도로도 사용할 수 있습니다.

Wine은 자유 소프트웨어이며 GNU LGPL 하에 배포됩니다.  자세한 내용은
LICENSE 파일을 참조하십시오.


2. 간편 설치 및 실행

소스를 받아 컴파일하는 경우 Wine Installer를 이용하는 것이 좋습니다.
 Wine 소스의 최상위 디렉토리에서 다음 명령을 실행합니다:

./tools/wineinstall

프로그램을 실행할 때는 "wine 프로그램명"처럼 합니다.  더 자세한 정보
및 문제 해결 방법은 이 파일의 나머지 부분과 Wine 맨페이지를 참조하십시오.
특히 http://www.winehq.org 사이트에 방대한 정보가 집약되어 있습니다.


3. 빌드에 필요한 조건

Wine을 컴파일하고 실행하려면 다음 중 하나가 필요합니다:

  리눅스 2.0.36 또는 그 이상
  FreeBSD 5.3 또는 그 이상
  Solaris x86 2.5 또는 그 이상
  NetBSD-current
  Mac OS X 10.4 또는 그 이상

Wine을 실행하려면 커널 차원의 스레드 지원이 필요하기 때문에 현재는 여기
나열한 운영 체제만 지원합니다.
커널 스레드를 지원하는 기타 다른 운영 체제는 향후 지원할 예정입니다.

리눅스 정보:
  리눅스 2.2.x에서는 잘 실행될 것이지만 리눅스 2.0.x에서는 실행될 수도
  있고 그렇지 않을 수도 있습니다(초기 2.0.x 버전에서는 스레드 관련 문제로
  프로그램이 죽음). 가급적 2.4.x와 2.6.x 같은 최근 커널을 사용하기
  바랍니다.

FreeBSD 정보:
  FreeBSD 4.x 및 5.x에서 빌드되지만 FreeBSD 5.3 이전 버전에선 제대로
  동작하지 않습니다.

  더 자세한 정보는   
  <ftp://ftp.freebsd.org/pub/FreeBSD/ports/ports/emulators/wine/>
  에 있는 FreeBSD ports 페이지를 참조하십시오.

Solaris 정보:
  거의 대부분의 경우 Wine을 빌드하려면 GNU 툴체인(gcc, gas 등)을 사용해야
  합니다.  경고: gas를 단순히 설치하기만 하면 gcc에서 사용되지 않을 수도
  있습니다.  gas를 설치한 다음 gcc를 재컴파일하거나 cc, as, ld 명령을
  GNU 바이너리로 심볼 링크를 걸어 주는 일이 필요하다고 합니다.

NetBSD 정보:
  USER_LDT, SYSVSHM, SYSVSEM, SYSVMSG 옵션이 커널에 포함되어 있어야 합니다.

Mac OS X 정보:
  x86 머신에서 빌드하려면 Xcode 2.4 또는 그 이상이 필요합니다.


지원되는 파일 시스템:
  Wine은 대부분의 파일 시스템에서 문제없이 실행됩니다.  그렇지만 /tmp
  디렉토리가 umsdos 타입으로 마운트된 경우에는 프로그램이 실행되지
  않습니다.  Samba를 이용해서 파일을 액세스하는 경우 몇 가지 호환성
  문제가 보고되기도 했습니다.  또한 NTFS는 현재 디스크 기록시 안정성이
  보장되어 있지 않습니다.  Windows 프로그램은 대부분 디스크 어딘가에
  데이터를 기록하므로 NTFS는 가급적 사용하지 않는 것이 좋습니다.  NTFS
  파일의 경우 쓰기 가능한 위치로 복사한 다음 사용하시기 바랍니다.
  
필수 구성 요소:
  X11 개발용 헤더 파일이 설치되어 있어야 합니다(데비안에서는 xlib6g-dev,
  레드햇에서는 XFree86-devel이란 패키지명으로 되어 있음).

필수 빌드 도구:
  x86 시스템에서는 gcc 2.7.2 이상이 필요합니다.
  2.7.2.3 이전 버전은 최적화 옵션을 켜고 컴파일하면 몇몇 파일에서 문제가
  발생할 수 있는데, 대부분 헤더 파일 관리와 관련된 문제로 인한 것들입니다.

  "make" 프로그램은 당연히 필수입니다(거의 대부분 GNU make 사용).

  flex 버전 2.5 이상과 bison이 필요합니다.

선택적 라이브러리:
  포함 여부의 선택이 가능한 라이브러리는 ./configure --verbose 명령으로
  확인할 수 있습니다.


4. 컴파일하기

wineinstall을 사용하지 않는 경우 다음 명령을 써서 Wine을 빌드합니다:

./configure
make depend
make

이렇게 하면 "wine" 프로그램과 다수의 라이브러리/바이너리가 빌드됩니다.
"wine" 프로그램은 Windows 실행 파일을 로드하고 실행하는 데 사용됩니다.
"libwine" 라이브러리("Winelib")는 Windows 소스 코드를 유닉스 상에서
컴파일하고 링크하는 용도로 사용할 수 있습니다.

컴파일 설정 옵션을 보려면 ./configure --help 명령을 사용합니다.

패치 파일을 써서 새 릴리스로 업그레이드하려면 먼저 릴리스의 최상위
디렉토리(README 파일이 들어 있는 디렉토리)로 갑니다.  그런 다음
"make clean" 명령을 실행하고 아래 명령으로 소스를 패치합니다:

    bunzip2 -c patch-file | patch -p1

"patch-file"은 패치 파일의 이름입니다(wine-0.9.x.diff.bz2 등의 형태).
패치한 다음에는 "./configure", "make depend && make"를 차례로
실행하면 됩니다.


5. 설정

Wine이 일단 정상적으로 빌드된 다음에는 "make install" 명령으로
실행 파일과 맨페이지, 기타 필요한 파일을 시스템에 설치할 수 있습니다.

설치하기 전 이전 버전의 Wine을 제거해야 한다는 점을 잊지 마시기
바랍니다.  "dpkg -r wine" 또는 "rpm -e wine" 또는 "make uninstall" 등의
명령으로 이전 버전을 제거할 수 있습니다.

설정 관련 도움말은 http://www.winehq.org/의 Support 페이지에 있습니다.

라이브러리 로딩 에러("Error while loading shared libraries: libntdll.so")가
발생하는 경우 라이브러리 경로가 /etc/ld.so.conf 파일 안에 지정되어 있는지
확인한 다음 root 권한으로 ldconfig를 실행하십시오.


6. 프로그램 실행

Wine을 실행할 때 실행 파일의 전체 경로를 지정할 수도 있고 파일명만 지정할
수도 있습니다.

예를 들어 카드놀이를 실행하려면:

	wine sol		   (파일을 찾기 위해 설정 파일에 지정된
	wine sol.exe		    검색 경로를 이용)

	wine c:\\windows\\sol.exe  (DOS 파일명 문법을 이용)

	wine /usr/windows/sol.exe  (유닉스 파일명 문법을 이용)

        wine sol.exe /parameter1 -parameter2 parameter3
				   (프로그램을 호출할 때 파라미터를 넘겨줌)

Wine은 아직 완성 단계에 도달하지 못했기 때문에 프로그램이 제대로 실행되지
않을 수 있습니다.  프로그램이 죽는 경우 문제를 분석하고 수정할 수 있도록
디버그 모드로 자동 진입됩니다.  자세한 디버깅 방법은 Wine 개발자 가이드의
디버깅 섹션을 참조하시기 바랍니다.


7. 더 자세한 정보

WWW:    여러 종류의 Wine 가이드, 애플리케이션 데이터베이스, 버그 추적 등 
        http://www.winehq.org/ 에 있는 WineHQ 사이트에 가면 많은 정보를 얻을
        수 있습니다.  정보를 찾을 때 대개 이 사이트가 출발점이 됩니다.

FAQ:    Wine FAQ은 http://www.winehq.org/FAQ 에 있습니다.

Usenet: Wine 관련 주제를 논의하거나 도움을 받으려면 comp.emulators.ms-windows.wine
        그룹을 이용하기 바랍니다.

Bugs:   http://bugs.winehq.org 의 Wine Bugzilla에 버그를 보고하십시오.
        버그 보고서를 제출하기 전 같은 문제가 이미 제출된 적이 있는지
        데이터베이스 검색을 통해 확인하기 바랍니다.  
        comp.emulators.ms-windows.wine 그룹에 버그 보고서를 올려도 됩니다.

IRC:	irc.freenode.net 의 #WineHQ 채널에서 도움을 받을 수 있습니다.

GIT:    Wine 개발 트리는 현재 GIT로 관리되고 있습니다.  더 자세한 정보는
	http://www.winehq.org/site/git 를 참조하기 바랍니다.

메일링 리스트:
        Wine 사용자와 개발자를 위해 메일링 리스트가 운영되고 있습니다.
        더 자세한 정보는 http://www.winehq.org/forums 를 참조하기 바랍니다.

위키:	Wine 위키는 http://wiki.winehq.org 에 있습니다.

추가할 내용이나 수정할 버그가 있다면 다음번 릴리스에 포함될 수 있도록
wine-patches@winehq.org 메일링 리스트로 패치('diff -u' 형식으로 된)를 보내
주시기 바랍니다.

--
Alexandre Julliard
julliard@winehq.org

Translated into Korean by
Bang Jun-Young
junyoung@mogua.com
